// An interface between Mongo and Telegraph
// ---------------------------------------------------------------------- //

var Mongo = require('mongoose')
,   print = require("util").print;

// ---------------------------------------------------------------------- //

module.exports.install = function(server) {
    
    var connect  = {}
    ,   appname  = server.appname
    ,   location = server.database.host
    ,   attempts = 0;
    
    Mongo = require('mongoose');
    
    Mongo.connection.on("open", function(){
        server.info(server.appname + " is watching " + location);
        server.database.connected = true;
    });
    
    connect = Mongo.connect(location);

    
    // Telegraph.Model overides
    // -------------------------------------------------- //

    Telegraph.Model = function(name, schema) {
        
        Schema = Mongo.Schema;
        
        m = Mongo.model(name, new Schema(schema));

        // Websocket Functions
        if (server.websockets === true) {
            
            m.publish = function(filter) {
                m.find(filter || {}, function(err, docs) {
                    server.send("telegraph-update", { "name": name.toLowerCase(), "models": docs });
                });
            };
        }

        return m;
        
    };

    Telegraph.import = mongo_import;

    return connect;
};


// Data Importer
// -------------------------------------------------- //

var mongo_import = module.exports.import = function mongoImport (src, replace) {

    var server  = this
    ,   timeout = {};

    if (server.database.connected === false) {
        server.info("Establishing MongoDB connection...");
        
        timeout = setTimeout(function() {
            server.error("Import process timed out. Is MongoDB running?");
            process.exit();
        }, 5000);
    }

    Mongo.connection.on("open", function() {

        var seed   = require(process.cwd() + "/" + src)
        ,   names  = Object.keys(seed)
        ,   len    = names.length - 1
        ,   errors = [];

        clearTimeout(timeout);
        
        server.info("Beginning importation process");

        function traverseSchemas(slot) {

            var s     = names[slot]
            ,   Model = Mongo.models[s];

            print("\nimporter - ".green + "Wiring information for " + s + " schema (" + seed[s].length + " records)..." );

            Model.remove({}, {}).model.create(seed[s], function(e) {

                if (e) { errors.push("         - ".red.bold + s.bold + ": " + e); };

                print(" done".green.bold);

                if (slot >= len) {
                    print("\n\n");
                    server.info("Import process complete");
                    
                    if (errors.length > 0) {
                        server.error("The following errors occured during the importation process:\n" 
                                     + errors.join("\n"));
                    }
                    print("\n");
                    process.exit();
                } else {
                    traverseSchemas(slot + 1);
                }
                
            });

        }

        traverseSchemas(0);
        
    });
};
