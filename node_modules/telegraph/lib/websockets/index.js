// Telegraph Sockets
// Sets up websockets (currently through socket.io)
// -------------------------------------------------- //

module.exports.setup = function(server) {
    
    var io = server.io = require('socket.io').listen(server.express);
    
    io.configure(function() {
        server.io.set("log level", (server.silent_mode) ? 0 : 2);
    });

    server.websocket_events = [];

    server.send = function(name, values) {
        io.sockets.emit(name, values);    
    };

    server.volley = function(name, values) {
        io.sockets.volatile.emit(name, values);
    };

    server.broadcast = function(name, values) {
        io.sockets.broadcast.emit(name, values);
    };


    // Extend the "on" function to support websockets
    // -------------------------------------------------- //

    Telegraph.prototype.register  = Telegraph.prototype.on,

    Telegraph.on = function(name, action) {

        var self = this,
            event = name.split(":")[0],
            label = name.split(":")[1];
        
        if (event === "websocket") {

            self.register(name, action);
            
            self.websocket_events.push({
                name   : label,
                action : function(data) {
                    self.info("emitting " + name);
                    self.emit(name, data);
                }
            });

        } else {
            self.register(name, action);
        }

        return self;
    };

    
    // Now, register socket.io events
    // -------------------------------------------------- //
    io.sockets.on("connection", function(socket) {
        
        server.emit("websocket:connect", socket);
        
        // Add websocket events
        server.websocket_events.forEach(function(e) {
            socket.on(e.name, e.action);
        });

    });

};